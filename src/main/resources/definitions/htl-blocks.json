[
  {
    "name": "data-sly-attribute",
    "insertHandlerType": "expression",
    "doc": {
      "description": "Sets an attribute or a group of attributes on the current element.",
      "element": "always shown",
      "elementContent": "always shown",
      "attributeValue": "optional; <code>String</code> for setting attribute content, or <code>Boolean</code> for setting boolean attributes, or <code>Object</code> for setting multiple attributes; removes the attribute if the value is omitted.",
      "attributeIdentifier": "optional; the attribute name; must be omitted only if attribute value is an <code>Object</code>."
    }
  },
  {
    "name": "data-sly-call",
    "insertHandlerType": "expression",
    "doc": {
      "description": "Calls a declared HTML block, passing parameters to it.",
      "element": "always shown",
      "elementContent": "replaced with the content of the called <code>data-sly-template</code> element",
      "attributeValue": "optional; an expression defining the template identifier and the parameters to pass",
      "attributeIdentifier": "none"
    }
  },
  {
    "name": "data-sly-element",
    "insertHandlerType": "expression",
    "doc": {
      "description": "Replaces the element's tag name.",
      "element": "always shown",
      "elementContent": "always shown",
      "attributeValue": "required; <code>String</code>; the element's tag name",
      "attributeIdentifier": "none"
    }
  },
  {
    "name": "data-sly-include",
    "insertHandlerType": "quotes",
    "doc": {
      "description": "Includes the output of a rendering script run with the current context.",
      "element": "always shown",
      "elementContent": "replaced with the content of the included script",
      "attributeValue": "required; the file to include",
      "attributeIdentifier": "none"
    }
  },
  {
    "name": "data-sly-list",
    "insertHandlerType": "expression",
    "doc": {
      "description": "Iterates over the content of each item in the attribute value.",
      "element": "shown only if the number of items from the attribute value is greater than 0, or if the attribute value is a string or number",
      "elementContent": "repeated as many times as there are items in the attribute value",
      "attributeValue": "optional; the item to iterate over; if omitted the content will not be shown",
      "attributeIdentifier": "optional; customised identifier name to access the item within the list element"
    }
  },
  {
    "name": "data-sly-repeat",
    "insertHandlerType": "expression",
    "doc": {
      "description": "Iterates over the content of each item in the attribute value and displays the containing element as many times as items in the attribute value.",
      "element": "shown only if the number of items from the attribute value is greater than 0, or if the attribute value is a string or number",
      "elementContent": "repeated as many times as there are items in the attribute value",
      "attributeValue": "optional; the item to iterate over; if omitted the containing element and its content will not be shown",
      "attributeIdentifier": "optional; customised identifier name to access the item within the repeat element"
    }
  },
  {
    "name": "data-sly-resource",
    "insertHandlerType": "quotes",
    "doc": {
      "description": "Includes a rendered resource.",
      "element": "always shown",
      "elementContent": "replaced with the content of the resource",
      "attributeValue": "required; the path to include",
      "attributeIdentifier": "none"
    }
  },
  {
    "name": "data-sly-template",
    "doc": {
      "description": "Declares an HTML block, naming it with an identifier and defining the parameters it can get.",
      "element": "never shown",
      "elementContent": "shown upon calling the template with <code>data-sly-call</code>",
      "attributeValue": "optional; an expression with only options, defining the parameters it can get",
      "attributeIdentifier": "required; the template identifier to declare"
    }
  },
  {
    "name": "data-sly-test",
    "insertHandlerType": "expression",
    "doc": {
      "description": "Keeps, or removes the element depending on the attribute value.",
      "element": "shown if test evaluates to <code>true</code>",
      "elementContent": "shown if test evaluates to <code>true</code>",
      "attributeValue": "optional; evaluated as <code>Boolean</code> (but not type-cased to <code>Boolean</code> when exposed in a variable); evaluates to <code>false</code> if the value is omitted",
      "attributeIdentifier": "optional; identifier name to access the result of the test"
    }
  },
  {
    "name": "data-sly-text",
    "insertHandlerType": "expression",
    "doc": {
      "description": "Sets the content for the current element.",
      "element": "always shown",
      "elementContent": "replaced with evaluated result",
      "attributeValue": "required; evaluates to <code>String</code>; the element content",
      "attributeIdentifier": "none"
    }
  },
  {
    "name": "data-sly-unwrap",
    "doc": {
      "description": "Unwraps the element.",
      "element": "never shown",
      "elementContent": "always shown",
      "attributeValue": "none",
      "attributeIdentifier": "none"
    }
  },
  {
    "name": "data-sly-use",
    "insertHandlerType": "use",
    "doc": {
      "description": "Exposes logic to the template.",
      "element": "always shown",
      "attributeValue": "required; evaluates to <code>String</code>; the object to instantiate",
      "attributeIdentifier": "optional; customised identifier name to access the instantiated logic"
    }
  }
]
